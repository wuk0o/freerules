# This is a basic workflow to help you get started with Actions

name: Generate rules for Shadowrocket(Surge)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
    - cron: "0 0/4 * * *"
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      
      - name: Set Variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "GFWLIST_RULES_URL=https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt" >> $GITHUB_ENV
          echo "GREATFIRE_RULES_URL=https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt" >> $GITHUB_ENV
          echo "GOOGLE_RULES_URL=https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt" >> $GITHUB_ENV
          echo "TELEGRAM_RULES_URL=https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt" >> $GITHUB_ENV
        shell: bash

      - name: Download rules
        run: |
          mkdir rules
          curl -sSL $GFWLIST_RULES_URL > ./rules/gfwlist.txt
          curl -sSL $GOOGLE_RULES_URL > ./rules/google.txt
          curl -sSL $TELEGRAM_RULES_URL > ./rules/telegram.txt
          
      - name: Generate rules
        run: |
          mkdir publish
          cp -r scripts publish
          pipenv run python genrules.py ./custom.yaml ./rules/gfwlist.txt ./rules/google.txt ./rules/telegram.txt > ./publish/blacklist.conf
          
      - name: Push to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --global user.name "WuKong"
          git config --global user.email "wuk0o@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
          
      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          rm -rf .git
          for file in $(find . -type f); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
          
          
